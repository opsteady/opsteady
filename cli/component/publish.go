package component

import "github.com/opsteady/opsteady/cli/tasks"

// Publish publishes the artifact that was generated by the build.
func (c *DefaultComponent) Publish() {
	executeOrder := c.DetermineOrderOfExecution()
	if len(c.OverrideDeployOrder) != 0 {
		executeOrder = c.OverrideDeployOrder
	}

	for _, folder := range executeOrder {
		switch folder {
		case c.Docker:
			c.PublishDocker()
		}
	}
}

// PublishDocker builds the docker container
func (c *DefaultComponent) PublishDocker() {
	AKSCreds, err := c.Credentials.AKS("management")
	if err != nil {
		c.Logger.Fatal().Err(err).Msg("could not get credentials to prepare ACR")
	}
	az := tasks.NewAz(c.GlobalConfig.TmpFolder, c.Logger)
	if err := az.LoginToAcr(c.GlobalConfig.ManagementDockerRegistry, "management", AKSCreds["client_id"].(string), AKSCreds["client_secret"].(string)); err != nil {
		c.Logger.Fatal().Err(err).Msg("could not login to ACR")
	}

	docker := tasks.NewDocker(c.Logger)
	if err := docker.Push(c.DockerFolder(), c.DockerBuildInfo.FullUrl(c.GlobalConfig.ManagementDockerRegistry)); err != nil {
		c.Logger.Fatal().Err(err).Msg("could not build Docker container")
	}
}

name: PR validation
on: [pull_request]

permissions:
  contents: read

jobs:
  validate:
    runs-on: ubuntu-20.04
    env:
      VAULT_ADDRESS: https://vault.management.os.opsteady.com:8200
    permissions:
      id-token: write
      contents: read
    container:
      image: opsteadyos.azurecr.io/cicd:1.4.1 # versioning=semver datasource=docker
      options: --user root
      credentials:
        username: ${{ secrets.acr_username }}
        password: ${{ secrets.acr_password }}
    steps:
      - name: Get JWT Token
        run: |
          VAULT_JWT=$(curl -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" "$ACTIONS_ID_TOKEN_REQUEST_URL" | jq -r '.value')
          echo VAULT_JWT=$VAULT_JWT >> $GITHUB_ENV

      - name: Authenticate to Vault
        run: |
          VAULT_TOKEN=$(vault write -address=${{ env.VAULT_ADDRESS }} -field=token auth/gha/login role=workflow jwt=${{ env.VAULT_JWT }})
          echo VAULT_TOKEN=$VAULT_TOKEN >> $GITHUB_ENV
          echo "::add-mask::$VAULT_TOKEN"

      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Configure Opsteady CLI
        run: |
          cat <<EOF > config.yaml
          tenant_id: ${{ secrets.tenant_id }}
          management_subscription_id: ${{ secrets.management_subscription_id }}
          management_docker_registry: opsteadyos.azurecr.io
          vault_ca_storage_account_name: opsteadyosvault
          EOF

      # Added to show info in the PR, don't need to check the logs
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          args: --issues-exit-code=0 --timeout 10m

      - name: Validate go code
        run: |
          go run main.go validate -c cli --cache
